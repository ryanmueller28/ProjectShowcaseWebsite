// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ProjectShowcaseWebsite.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Dev\ProjectShowcase\ProjectShowcaseWebsite\Components\ProjectList.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Dev\ProjectShowcase\ProjectShowcaseWebsite\Components\ProjectList.razor"
using ProjectShowcaseWebsite.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Dev\ProjectShowcase\ProjectShowcaseWebsite\Components\ProjectList.razor"
using ProjectShowcaseWebsite.Services;

#line default
#line hidden
#nullable disable
    public partial class ProjectList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 68 "D:\Dev\ProjectShowcase\ProjectShowcaseWebsite\Components\ProjectList.razor"
 
    Project selectedProject;
    string selectedProjectId;

    void SelectProject(string projectId)
    {
        selectedProjectId = projectId;
        selectedProject = ProjectService.GetProjects().First(x => x.Id == projectId);
    }

    string gitURL;
    string mainURL;

    void GetProjectGitLink()
    {
        if (selectedProject.GitURL == null)
        {
            System.Console.WriteLine($"The GitHub link for project {selectedProject.Id}: {selectedProject.ProjectName} is not available yet.");
        }
        else
        {
            gitURL = selectedProject.GitURL;
            System.Console.WriteLine($"The GitHub link for project {selectedProject.Id}: {selectedProject.ProjectName} is {gitURL}");
        }
    }

    string GetProjectMainPage()
    {
        if (selectedProject.URL == null)
        {
            System.Console.WriteLine($"That page for proejct {selectedProject.Id}: {selectedProject.ProjectName} is under construction");
        }
        else
        {
            mainURL = selectedProject.URL;
        }

        return mainURL;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private JsonFileProjectService ProjectService { get; set; }
    }
}
#pragma warning restore 1591
